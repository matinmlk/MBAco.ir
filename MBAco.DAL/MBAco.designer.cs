#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBAco.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mbaco")]
	public partial class MBAcoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_AnalayseParameter(tbl_AnalayseParameter instance);
    partial void Updatetbl_AnalayseParameter(tbl_AnalayseParameter instance);
    partial void Deletetbl_AnalayseParameter(tbl_AnalayseParameter instance);
    partial void Inserttbl_ProcedureParameter(tbl_ProcedureParameter instance);
    partial void Updatetbl_ProcedureParameter(tbl_ProcedureParameter instance);
    partial void Deletetbl_ProcedureParameter(tbl_ProcedureParameter instance);
    partial void Inserttbl_AnalyseParameterType(tbl_AnalyseParameterType instance);
    partial void Updatetbl_AnalyseParameterType(tbl_AnalyseParameterType instance);
    partial void Deletetbl_AnalyseParameterType(tbl_AnalyseParameterType instance);
    partial void Inserttbl_Contact(tbl_Contact instance);
    partial void Updatetbl_Contact(tbl_Contact instance);
    partial void Deletetbl_Contact(tbl_Contact instance);
    partial void Inserttbl_Culture(tbl_Culture instance);
    partial void Updatetbl_Culture(tbl_Culture instance);
    partial void Deletetbl_Culture(tbl_Culture instance);
    partial void Inserttbl_Customer(tbl_Customer instance);
    partial void Updatetbl_Customer(tbl_Customer instance);
    partial void Deletetbl_Customer(tbl_Customer instance);
    partial void Inserttbl_CustomerContact(tbl_CustomerContact instance);
    partial void Updatetbl_CustomerContact(tbl_CustomerContact instance);
    partial void Deletetbl_CustomerContact(tbl_CustomerContact instance);
    partial void Inserttbl_DailyAnalyseReport(tbl_DailyAnalyseReport instance);
    partial void Updatetbl_DailyAnalyseReport(tbl_DailyAnalyseReport instance);
    partial void Deletetbl_DailyAnalyseReport(tbl_DailyAnalyseReport instance);
    partial void Inserttbl_NotificationMessage(tbl_NotificationMessage instance);
    partial void Updatetbl_NotificationMessage(tbl_NotificationMessage instance);
    partial void Deletetbl_NotificationMessage(tbl_NotificationMessage instance);
    partial void Inserttbl_NotificationMessageType(tbl_NotificationMessageType instance);
    partial void Updatetbl_NotificationMessageType(tbl_NotificationMessageType instance);
    partial void Deletetbl_NotificationMessageType(tbl_NotificationMessageType instance);
    #endregion
		
		public MBAcoDataContext() : 
				base(global::MBAco.DAL.Properties.Settings.Default.mbacoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MBAcoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MBAcoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MBAcoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MBAcoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_AnalayseParameter> tbl_AnalayseParameters
		{
			get
			{
				return this.GetTable<tbl_AnalayseParameter>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ProcedureParameter> tbl_ProcedureParameters
		{
			get
			{
				return this.GetTable<tbl_ProcedureParameter>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AnalyseParameterType> tbl_AnalyseParameterTypes
		{
			get
			{
				return this.GetTable<tbl_AnalyseParameterType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Contact> tbl_Contacts
		{
			get
			{
				return this.GetTable<tbl_Contact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Culture> tbl_Cultures
		{
			get
			{
				return this.GetTable<tbl_Culture>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Customer> tbl_Customers
		{
			get
			{
				return this.GetTable<tbl_Customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CustomerContact> tbl_CustomerContacts
		{
			get
			{
				return this.GetTable<tbl_CustomerContact>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DailyAnalyseReport> tbl_DailyAnalyseReports
		{
			get
			{
				return this.GetTable<tbl_DailyAnalyseReport>();
			}
		}
		
		public System.Data.Linq.Table<tbl_NotificationMessage> tbl_NotificationMessages
		{
			get
			{
				return this.GetTable<tbl_NotificationMessage>();
			}
		}
		
		public System.Data.Linq.Table<tbl_NotificationMessageType> tbl_NotificationMessageTypes
		{
			get
			{
				return this.GetTable<tbl_NotificationMessageType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_AnalayseParameter")]
	public partial class tbl_AnalayseParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnalayseParameterID;
		
		private string _Name;
		
		private string _Symbol;
		
		private int _AnalyseParameterType;
		
		private string _Comment;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnalayseParameterIDChanging(int value);
    partial void OnAnalayseParameterIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnAnalyseParameterTypeChanging(int value);
    partial void OnAnalyseParameterTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_AnalayseParameter()
		{
			this._tbl_ProcedureParameters = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalayseParameterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnalayseParameterID
		{
			get
			{
				return this._AnalayseParameterID;
			}
			set
			{
				if ((this._AnalayseParameterID != value))
				{
					this.OnAnalayseParameterIDChanging(value);
					this.SendPropertyChanging();
					this._AnalayseParameterID = value;
					this.SendPropertyChanged("AnalayseParameterID");
					this.OnAnalayseParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalyseParameterType", DbType="Int NOT NULL")]
		public int AnalyseParameterType
		{
			get
			{
				return this._AnalyseParameterType;
			}
			set
			{
				if ((this._AnalyseParameterType != value))
				{
					this.OnAnalyseParameterTypeChanging(value);
					this.SendPropertyChanging();
					this._AnalyseParameterType = value;
					this.SendPropertyChanged("AnalyseParameterType");
					this.OnAnalyseParameterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_AnalayseParameter_tbl_ProcedureParameter", Storage="_tbl_ProcedureParameters", ThisKey="AnalayseParameterID", OtherKey="AnalayseParameterID")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters
		{
			get
			{
				return this._tbl_ProcedureParameters;
			}
			set
			{
				this._tbl_ProcedureParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_AnalayseParameter = this;
		}
		
		private void detach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_AnalayseParameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ProcedureParameter")]
	public partial class tbl_ProcedureParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcedureParameterID;
		
		private int _CustomerID;
		
		private int _AnalayseParameterID;
		
		private System.Nullable<double> _DangerMaxLimit;
		
		private System.Nullable<double> _DangerMinLimit;
		
		private System.Nullable<double> _WarningMaxLimit;
		
		private System.Nullable<double> _WarningMinLimit;
		
		private System.Nullable<double> _PossibleMaxLimit;
		
		private System.Nullable<double> _PossibleMinLimit;
		
		private System.Nullable<int> _DangerMaxMessage;
		
		private System.Nullable<int> _DangerMinMessage;
		
		private System.Nullable<int> _WarningMaxMessage;
		
		private System.Nullable<int> _WarningMinMessage;
		
		private System.Nullable<int> _PossibleMaxMessage;
		
		private System.Nullable<int> _PossibleMinMessage;
		
		private string _Comment;
		
		private EntitySet<tbl_DailyAnalyseReport> _tbl_DailyAnalyseReports;
		
		private EntityRef<tbl_AnalayseParameter> _tbl_AnalayseParameter;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage1;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage2;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage3;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage4;
		
		private EntityRef<tbl_NotificationMessage> _tbl_NotificationMessage5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcedureParameterIDChanging(int value);
    partial void OnProcedureParameterIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnAnalayseParameterIDChanging(int value);
    partial void OnAnalayseParameterIDChanged();
    partial void OnDangerMaxLimitChanging(System.Nullable<double> value);
    partial void OnDangerMaxLimitChanged();
    partial void OnDangerMinLimitChanging(System.Nullable<double> value);
    partial void OnDangerMinLimitChanged();
    partial void OnWarningMaxLimitChanging(System.Nullable<double> value);
    partial void OnWarningMaxLimitChanged();
    partial void OnWarningMinLimitChanging(System.Nullable<double> value);
    partial void OnWarningMinLimitChanged();
    partial void OnPossibleMaxLimitChanging(System.Nullable<double> value);
    partial void OnPossibleMaxLimitChanged();
    partial void OnPossibleMinLimitChanging(System.Nullable<double> value);
    partial void OnPossibleMinLimitChanged();
    partial void OnDangerMaxMessageChanging(System.Nullable<int> value);
    partial void OnDangerMaxMessageChanged();
    partial void OnDangerMinMessageChanging(System.Nullable<int> value);
    partial void OnDangerMinMessageChanged();
    partial void OnWarningMaxMessageChanging(System.Nullable<int> value);
    partial void OnWarningMaxMessageChanged();
    partial void OnWarningMinMessageChanging(System.Nullable<int> value);
    partial void OnWarningMinMessageChanged();
    partial void OnPossibleMaxMessageChanging(System.Nullable<int> value);
    partial void OnPossibleMaxMessageChanged();
    partial void OnPossibleMinMessageChanging(System.Nullable<int> value);
    partial void OnPossibleMinMessageChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_ProcedureParameter()
		{
			this._tbl_DailyAnalyseReports = new EntitySet<tbl_DailyAnalyseReport>(new Action<tbl_DailyAnalyseReport>(this.attach_tbl_DailyAnalyseReports), new Action<tbl_DailyAnalyseReport>(this.detach_tbl_DailyAnalyseReports));
			this._tbl_AnalayseParameter = default(EntityRef<tbl_AnalayseParameter>);
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			this._tbl_NotificationMessage = default(EntityRef<tbl_NotificationMessage>);
			this._tbl_NotificationMessage1 = default(EntityRef<tbl_NotificationMessage>);
			this._tbl_NotificationMessage2 = default(EntityRef<tbl_NotificationMessage>);
			this._tbl_NotificationMessage3 = default(EntityRef<tbl_NotificationMessage>);
			this._tbl_NotificationMessage4 = default(EntityRef<tbl_NotificationMessage>);
			this._tbl_NotificationMessage5 = default(EntityRef<tbl_NotificationMessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureParameterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcedureParameterID
		{
			get
			{
				return this._ProcedureParameterID;
			}
			set
			{
				if ((this._ProcedureParameterID != value))
				{
					this.OnProcedureParameterIDChanging(value);
					this.SendPropertyChanging();
					this._ProcedureParameterID = value;
					this.SendPropertyChanged("ProcedureParameterID");
					this.OnProcedureParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalayseParameterID", DbType="Int NOT NULL")]
		public int AnalayseParameterID
		{
			get
			{
				return this._AnalayseParameterID;
			}
			set
			{
				if ((this._AnalayseParameterID != value))
				{
					if (this._tbl_AnalayseParameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnalayseParameterIDChanging(value);
					this.SendPropertyChanging();
					this._AnalayseParameterID = value;
					this.SendPropertyChanged("AnalayseParameterID");
					this.OnAnalayseParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangerMaxLimit", DbType="Float")]
		public System.Nullable<double> DangerMaxLimit
		{
			get
			{
				return this._DangerMaxLimit;
			}
			set
			{
				if ((this._DangerMaxLimit != value))
				{
					this.OnDangerMaxLimitChanging(value);
					this.SendPropertyChanging();
					this._DangerMaxLimit = value;
					this.SendPropertyChanged("DangerMaxLimit");
					this.OnDangerMaxLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangerMinLimit", DbType="Float")]
		public System.Nullable<double> DangerMinLimit
		{
			get
			{
				return this._DangerMinLimit;
			}
			set
			{
				if ((this._DangerMinLimit != value))
				{
					this.OnDangerMinLimitChanging(value);
					this.SendPropertyChanging();
					this._DangerMinLimit = value;
					this.SendPropertyChanged("DangerMinLimit");
					this.OnDangerMinLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningMaxLimit", DbType="Float")]
		public System.Nullable<double> WarningMaxLimit
		{
			get
			{
				return this._WarningMaxLimit;
			}
			set
			{
				if ((this._WarningMaxLimit != value))
				{
					this.OnWarningMaxLimitChanging(value);
					this.SendPropertyChanging();
					this._WarningMaxLimit = value;
					this.SendPropertyChanged("WarningMaxLimit");
					this.OnWarningMaxLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningMinLimit", DbType="Float")]
		public System.Nullable<double> WarningMinLimit
		{
			get
			{
				return this._WarningMinLimit;
			}
			set
			{
				if ((this._WarningMinLimit != value))
				{
					this.OnWarningMinLimitChanging(value);
					this.SendPropertyChanging();
					this._WarningMinLimit = value;
					this.SendPropertyChanged("WarningMinLimit");
					this.OnWarningMinLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleMaxLimit", DbType="Float")]
		public System.Nullable<double> PossibleMaxLimit
		{
			get
			{
				return this._PossibleMaxLimit;
			}
			set
			{
				if ((this._PossibleMaxLimit != value))
				{
					this.OnPossibleMaxLimitChanging(value);
					this.SendPropertyChanging();
					this._PossibleMaxLimit = value;
					this.SendPropertyChanged("PossibleMaxLimit");
					this.OnPossibleMaxLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleMinLimit", DbType="Float")]
		public System.Nullable<double> PossibleMinLimit
		{
			get
			{
				return this._PossibleMinLimit;
			}
			set
			{
				if ((this._PossibleMinLimit != value))
				{
					this.OnPossibleMinLimitChanging(value);
					this.SendPropertyChanging();
					this._PossibleMinLimit = value;
					this.SendPropertyChanged("PossibleMinLimit");
					this.OnPossibleMinLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangerMaxMessage", DbType="Int")]
		public System.Nullable<int> DangerMaxMessage
		{
			get
			{
				return this._DangerMaxMessage;
			}
			set
			{
				if ((this._DangerMaxMessage != value))
				{
					if (this._tbl_NotificationMessage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDangerMaxMessageChanging(value);
					this.SendPropertyChanging();
					this._DangerMaxMessage = value;
					this.SendPropertyChanged("DangerMaxMessage");
					this.OnDangerMaxMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangerMinMessage", DbType="Int")]
		public System.Nullable<int> DangerMinMessage
		{
			get
			{
				return this._DangerMinMessage;
			}
			set
			{
				if ((this._DangerMinMessage != value))
				{
					if (this._tbl_NotificationMessage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDangerMinMessageChanging(value);
					this.SendPropertyChanging();
					this._DangerMinMessage = value;
					this.SendPropertyChanged("DangerMinMessage");
					this.OnDangerMinMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningMaxMessage", DbType="Int")]
		public System.Nullable<int> WarningMaxMessage
		{
			get
			{
				return this._WarningMaxMessage;
			}
			set
			{
				if ((this._WarningMaxMessage != value))
				{
					if (this._tbl_NotificationMessage2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarningMaxMessageChanging(value);
					this.SendPropertyChanging();
					this._WarningMaxMessage = value;
					this.SendPropertyChanged("WarningMaxMessage");
					this.OnWarningMaxMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarningMinMessage", DbType="Int")]
		public System.Nullable<int> WarningMinMessage
		{
			get
			{
				return this._WarningMinMessage;
			}
			set
			{
				if ((this._WarningMinMessage != value))
				{
					if (this._tbl_NotificationMessage3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarningMinMessageChanging(value);
					this.SendPropertyChanging();
					this._WarningMinMessage = value;
					this.SendPropertyChanged("WarningMinMessage");
					this.OnWarningMinMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleMaxMessage", DbType="Int")]
		public System.Nullable<int> PossibleMaxMessage
		{
			get
			{
				return this._PossibleMaxMessage;
			}
			set
			{
				if ((this._PossibleMaxMessage != value))
				{
					if (this._tbl_NotificationMessage4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPossibleMaxMessageChanging(value);
					this.SendPropertyChanging();
					this._PossibleMaxMessage = value;
					this.SendPropertyChanged("PossibleMaxMessage");
					this.OnPossibleMaxMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossibleMinMessage", DbType="Int")]
		public System.Nullable<int> PossibleMinMessage
		{
			get
			{
				return this._PossibleMinMessage;
			}
			set
			{
				if ((this._PossibleMinMessage != value))
				{
					if (this._tbl_NotificationMessage5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPossibleMinMessageChanging(value);
					this.SendPropertyChanging();
					this._PossibleMinMessage = value;
					this.SendPropertyChanged("PossibleMinMessage");
					this.OnPossibleMinMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_ProcedureParameter_tbl_DailyAnalyseReport", Storage="_tbl_DailyAnalyseReports", ThisKey="ProcedureParameterID", OtherKey="ProcedureParameterID")]
		public EntitySet<tbl_DailyAnalyseReport> tbl_DailyAnalyseReports
		{
			get
			{
				return this._tbl_DailyAnalyseReports;
			}
			set
			{
				this._tbl_DailyAnalyseReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_AnalayseParameter_tbl_ProcedureParameter", Storage="_tbl_AnalayseParameter", ThisKey="AnalayseParameterID", OtherKey="AnalayseParameterID", IsForeignKey=true)]
		public tbl_AnalayseParameter tbl_AnalayseParameter
		{
			get
			{
				return this._tbl_AnalayseParameter.Entity;
			}
			set
			{
				tbl_AnalayseParameter previousValue = this._tbl_AnalayseParameter.Entity;
				if (((previousValue != value) 
							|| (this._tbl_AnalayseParameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_AnalayseParameter.Entity = null;
						previousValue.tbl_ProcedureParameters.Remove(this);
					}
					this._tbl_AnalayseParameter.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters.Add(this);
						this._AnalayseParameterID = value.AnalayseParameterID;
					}
					else
					{
						this._AnalayseParameterID = default(int);
					}
					this.SendPropertyChanged("tbl_AnalayseParameter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_ProcedureParameter", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_ProcedureParameters.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter", Storage="_tbl_NotificationMessage", ThisKey="DangerMaxMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage
		{
			get
			{
				return this._tbl_NotificationMessage.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage.Entity = null;
						previousValue.tbl_ProcedureParameters.Remove(this);
					}
					this._tbl_NotificationMessage.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters.Add(this);
						this._DangerMaxMessage = value.NotificationMessageID;
					}
					else
					{
						this._DangerMaxMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter1", Storage="_tbl_NotificationMessage1", ThisKey="DangerMinMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage1
		{
			get
			{
				return this._tbl_NotificationMessage1.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage1.Entity = null;
						previousValue.tbl_ProcedureParameters1.Remove(this);
					}
					this._tbl_NotificationMessage1.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters1.Add(this);
						this._DangerMinMessage = value.NotificationMessageID;
					}
					else
					{
						this._DangerMinMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter2", Storage="_tbl_NotificationMessage2", ThisKey="WarningMaxMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage2
		{
			get
			{
				return this._tbl_NotificationMessage2.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage2.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage2.Entity = null;
						previousValue.tbl_ProcedureParameters2.Remove(this);
					}
					this._tbl_NotificationMessage2.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters2.Add(this);
						this._WarningMaxMessage = value.NotificationMessageID;
					}
					else
					{
						this._WarningMaxMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter3", Storage="_tbl_NotificationMessage3", ThisKey="WarningMinMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage3
		{
			get
			{
				return this._tbl_NotificationMessage3.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage3.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage3.Entity = null;
						previousValue.tbl_ProcedureParameters3.Remove(this);
					}
					this._tbl_NotificationMessage3.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters3.Add(this);
						this._WarningMinMessage = value.NotificationMessageID;
					}
					else
					{
						this._WarningMinMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter4", Storage="_tbl_NotificationMessage4", ThisKey="PossibleMaxMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage4
		{
			get
			{
				return this._tbl_NotificationMessage4.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage4.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage4.Entity = null;
						previousValue.tbl_ProcedureParameters4.Remove(this);
					}
					this._tbl_NotificationMessage4.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters4.Add(this);
						this._PossibleMaxMessage = value.NotificationMessageID;
					}
					else
					{
						this._PossibleMaxMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter5", Storage="_tbl_NotificationMessage5", ThisKey="PossibleMinMessage", OtherKey="NotificationMessageID", IsForeignKey=true)]
		public tbl_NotificationMessage tbl_NotificationMessage5
		{
			get
			{
				return this._tbl_NotificationMessage5.Entity;
			}
			set
			{
				tbl_NotificationMessage previousValue = this._tbl_NotificationMessage5.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessage5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessage5.Entity = null;
						previousValue.tbl_ProcedureParameters5.Remove(this);
					}
					this._tbl_NotificationMessage5.Entity = value;
					if ((value != null))
					{
						value.tbl_ProcedureParameters5.Add(this);
						this._PossibleMinMessage = value.NotificationMessageID;
					}
					else
					{
						this._PossibleMinMessage = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_NotificationMessage5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DailyAnalyseReports(tbl_DailyAnalyseReport entity)
		{
			this.SendPropertyChanging();
			entity.tbl_ProcedureParameter = this;
		}
		
		private void detach_tbl_DailyAnalyseReports(tbl_DailyAnalyseReport entity)
		{
			this.SendPropertyChanging();
			entity.tbl_ProcedureParameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_AnalyseParameterType")]
	public partial class tbl_AnalyseParameterType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnalyseParameterTypeID;
		
		private string _Name;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnalyseParameterTypeIDChanging(int value);
    partial void OnAnalyseParameterTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_AnalyseParameterType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnalyseParameterTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnalyseParameterTypeID
		{
			get
			{
				return this._AnalyseParameterTypeID;
			}
			set
			{
				if ((this._AnalyseParameterTypeID != value))
				{
					this.OnAnalyseParameterTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AnalyseParameterTypeID = value;
					this.SendPropertyChanged("AnalyseParameterTypeID");
					this.OnAnalyseParameterTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Contact")]
	public partial class tbl_Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private string _Name;
		
		private string _Family;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private int _CustomerID;
		
		private string _Post;
		
		private string _Comment;
		
		private EntitySet<tbl_CustomerContact> _tbl_CustomerContacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_Contact()
		{
			this._tbl_CustomerContacts = new EntitySet<tbl_CustomerContact>(new Action<tbl_CustomerContact>(this.attach_tbl_CustomerContacts), new Action<tbl_CustomerContact>(this.detach_tbl_CustomerContacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(500)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Contact_tbl_CustomerContact", Storage="_tbl_CustomerContacts", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<tbl_CustomerContact> tbl_CustomerContacts
		{
			get
			{
				return this._tbl_CustomerContacts;
			}
			set
			{
				this._tbl_CustomerContacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_CustomerContacts(tbl_CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Contact = this;
		}
		
		private void detach_tbl_CustomerContacts(tbl_CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Culture")]
	public partial class tbl_Culture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CultureID;
		
		private string _Name;
		
		private string _Comment;
		
		private EntitySet<tbl_NotificationMessage> _tbl_NotificationMessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCultureIDChanging(int value);
    partial void OnCultureIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_Culture()
		{
			this._tbl_NotificationMessages = new EntitySet<tbl_NotificationMessage>(new Action<tbl_NotificationMessage>(this.attach_tbl_NotificationMessages), new Action<tbl_NotificationMessage>(this.detach_tbl_NotificationMessages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CultureID
		{
			get
			{
				return this._CultureID;
			}
			set
			{
				if ((this._CultureID != value))
				{
					this.OnCultureIDChanging(value);
					this.SendPropertyChanging();
					this._CultureID = value;
					this.SendPropertyChanged("CultureID");
					this.OnCultureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Culture_tbl_NotificationMessage", Storage="_tbl_NotificationMessages", ThisKey="CultureID", OtherKey="CultureID")]
		public EntitySet<tbl_NotificationMessage> tbl_NotificationMessages
		{
			get
			{
				return this._tbl_NotificationMessages;
			}
			set
			{
				this._tbl_NotificationMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_NotificationMessages(tbl_NotificationMessage entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Culture = this;
		}
		
		private void detach_tbl_NotificationMessages(tbl_NotificationMessage entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Culture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
	public partial class tbl_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Name;
		
		private string _State;
		
		private string _City;
		
		private string _Address;
		
		private string _Comment;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters;
		
		private EntitySet<tbl_CustomerContact> _tbl_CustomerContacts;
		
		private EntitySet<tbl_DailyAnalyseReport> _tbl_DailyAnalyseReports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_Customer()
		{
			this._tbl_ProcedureParameters = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters));
			this._tbl_CustomerContacts = new EntitySet<tbl_CustomerContact>(new Action<tbl_CustomerContact>(this.attach_tbl_CustomerContacts), new Action<tbl_CustomerContact>(this.detach_tbl_CustomerContacts));
			this._tbl_DailyAnalyseReports = new EntitySet<tbl_DailyAnalyseReport>(new Action<tbl_DailyAnalyseReport>(this.attach_tbl_DailyAnalyseReports), new Action<tbl_DailyAnalyseReport>(this.detach_tbl_DailyAnalyseReports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NChar(1000) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_ProcedureParameter", Storage="_tbl_ProcedureParameters", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters
		{
			get
			{
				return this._tbl_ProcedureParameters;
			}
			set
			{
				this._tbl_ProcedureParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_CustomerContact", Storage="_tbl_CustomerContacts", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_CustomerContact> tbl_CustomerContacts
		{
			get
			{
				return this._tbl_CustomerContacts;
			}
			set
			{
				this._tbl_CustomerContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_DailyAnalyseReport", Storage="_tbl_DailyAnalyseReports", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_DailyAnalyseReport> tbl_DailyAnalyseReports
		{
			get
			{
				return this._tbl_DailyAnalyseReports;
			}
			set
			{
				this._tbl_DailyAnalyseReports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
		
		private void attach_tbl_CustomerContacts(tbl_CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_CustomerContacts(tbl_CustomerContact entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
		
		private void attach_tbl_DailyAnalyseReports(tbl_DailyAnalyseReport entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_DailyAnalyseReports(tbl_DailyAnalyseReport entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CustomerContact")]
	public partial class tbl_CustomerContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerContactID;
		
		private int _CustomerID;
		
		private int _ContactID;
		
		private string _Post;
		
		private string _Comment;
		
		private EntityRef<tbl_Contact> _tbl_Contact;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerContactIDChanging(int value);
    partial void OnCustomerContactIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_CustomerContact()
		{
			this._tbl_Contact = default(EntityRef<tbl_Contact>);
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerContactID
		{
			get
			{
				return this._CustomerContactID;
			}
			set
			{
				if ((this._CustomerContactID != value))
				{
					this.OnCustomerContactIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerContactID = value;
					this.SendPropertyChanged("CustomerContactID");
					this.OnCustomerContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int NOT NULL")]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._tbl_Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(150)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Contact_tbl_CustomerContact", Storage="_tbl_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public tbl_Contact tbl_Contact
		{
			get
			{
				return this._tbl_Contact.Entity;
			}
			set
			{
				tbl_Contact previousValue = this._tbl_Contact.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Contact.Entity = null;
						previousValue.tbl_CustomerContacts.Remove(this);
					}
					this._tbl_Contact.Entity = value;
					if ((value != null))
					{
						value.tbl_CustomerContacts.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(int);
					}
					this.SendPropertyChanged("tbl_Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_CustomerContact", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_CustomerContacts.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_CustomerContacts.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DailyAnalyseReport")]
	public partial class tbl_DailyAnalyseReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DailyAnalyseReportID;
		
		private int _CustomerID;
		
		private int _ProcedureParameterID;
		
		private System.DateTime _Date;
		
		private double _Value;
		
		private bool _IsApproved;
		
		private string _Comment;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
		private EntityRef<tbl_ProcedureParameter> _tbl_ProcedureParameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyAnalyseReportIDChanging(int value);
    partial void OnDailyAnalyseReportIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnProcedureParameterIDChanging(int value);
    partial void OnProcedureParameterIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_DailyAnalyseReport()
		{
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			this._tbl_ProcedureParameter = default(EntityRef<tbl_ProcedureParameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyAnalyseReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DailyAnalyseReportID
		{
			get
			{
				return this._DailyAnalyseReportID;
			}
			set
			{
				if ((this._DailyAnalyseReportID != value))
				{
					this.OnDailyAnalyseReportIDChanging(value);
					this.SendPropertyChanging();
					this._DailyAnalyseReportID = value;
					this.SendPropertyChanged("DailyAnalyseReportID");
					this.OnDailyAnalyseReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureParameterID", DbType="Int NOT NULL")]
		public int ProcedureParameterID
		{
			get
			{
				return this._ProcedureParameterID;
			}
			set
			{
				if ((this._ProcedureParameterID != value))
				{
					if (this._tbl_ProcedureParameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcedureParameterIDChanging(value);
					this.SendPropertyChanging();
					this._ProcedureParameterID = value;
					this.SendPropertyChanged("ProcedureParameterID");
					this.OnProcedureParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float NOT NULL")]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_DailyAnalyseReport", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_DailyAnalyseReports.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_DailyAnalyseReports.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_ProcedureParameter_tbl_DailyAnalyseReport", Storage="_tbl_ProcedureParameter", ThisKey="ProcedureParameterID", OtherKey="ProcedureParameterID", IsForeignKey=true)]
		public tbl_ProcedureParameter tbl_ProcedureParameter
		{
			get
			{
				return this._tbl_ProcedureParameter.Entity;
			}
			set
			{
				tbl_ProcedureParameter previousValue = this._tbl_ProcedureParameter.Entity;
				if (((previousValue != value) 
							|| (this._tbl_ProcedureParameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_ProcedureParameter.Entity = null;
						previousValue.tbl_DailyAnalyseReports.Remove(this);
					}
					this._tbl_ProcedureParameter.Entity = value;
					if ((value != null))
					{
						value.tbl_DailyAnalyseReports.Add(this);
						this._ProcedureParameterID = value.ProcedureParameterID;
					}
					else
					{
						this._ProcedureParameterID = default(int);
					}
					this.SendPropertyChanged("tbl_ProcedureParameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_NotificationMessage")]
	public partial class tbl_NotificationMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationMessageID;
		
		private int _CultureID;
		
		private int _Type;
		
		private string _Text;
		
		private string _ShortText;
		
		private string _FullText;
		
		private string _Comment;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters1;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters2;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters3;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters4;
		
		private EntitySet<tbl_ProcedureParameter> _tbl_ProcedureParameters5;
		
		private EntityRef<tbl_Culture> _tbl_Culture;
		
		private EntityRef<tbl_NotificationMessageType> _tbl_NotificationMessageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationMessageIDChanging(int value);
    partial void OnNotificationMessageIDChanged();
    partial void OnCultureIDChanging(int value);
    partial void OnCultureIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnShortTextChanging(string value);
    partial void OnShortTextChanged();
    partial void OnFullTextChanging(string value);
    partial void OnFullTextChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_NotificationMessage()
		{
			this._tbl_ProcedureParameters = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters));
			this._tbl_ProcedureParameters1 = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters1), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters1));
			this._tbl_ProcedureParameters2 = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters2), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters2));
			this._tbl_ProcedureParameters3 = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters3), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters3));
			this._tbl_ProcedureParameters4 = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters4), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters4));
			this._tbl_ProcedureParameters5 = new EntitySet<tbl_ProcedureParameter>(new Action<tbl_ProcedureParameter>(this.attach_tbl_ProcedureParameters5), new Action<tbl_ProcedureParameter>(this.detach_tbl_ProcedureParameters5));
			this._tbl_Culture = default(EntityRef<tbl_Culture>);
			this._tbl_NotificationMessageType = default(EntityRef<tbl_NotificationMessageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationMessageID
		{
			get
			{
				return this._NotificationMessageID;
			}
			set
			{
				if ((this._NotificationMessageID != value))
				{
					this.OnNotificationMessageIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationMessageID = value;
					this.SendPropertyChanged("NotificationMessageID");
					this.OnNotificationMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureID", DbType="Int NOT NULL")]
		public int CultureID
		{
			get
			{
				return this._CultureID;
			}
			set
			{
				if ((this._CultureID != value))
				{
					if (this._tbl_Culture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCultureIDChanging(value);
					this.SendPropertyChanging();
					this._CultureID = value;
					this.SendPropertyChanged("CultureID");
					this.OnCultureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._tbl_NotificationMessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortText
		{
			get
			{
				return this._ShortText;
			}
			set
			{
				if ((this._ShortText != value))
				{
					this.OnShortTextChanging(value);
					this.SendPropertyChanging();
					this._ShortText = value;
					this.SendPropertyChanged("ShortText");
					this.OnShortTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string FullText
		{
			get
			{
				return this._FullText;
			}
			set
			{
				if ((this._FullText != value))
				{
					this.OnFullTextChanging(value);
					this.SendPropertyChanging();
					this._FullText = value;
					this.SendPropertyChanged("FullText");
					this.OnFullTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter", Storage="_tbl_ProcedureParameters", ThisKey="NotificationMessageID", OtherKey="DangerMaxMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters
		{
			get
			{
				return this._tbl_ProcedureParameters;
			}
			set
			{
				this._tbl_ProcedureParameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter1", Storage="_tbl_ProcedureParameters1", ThisKey="NotificationMessageID", OtherKey="DangerMinMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters1
		{
			get
			{
				return this._tbl_ProcedureParameters1;
			}
			set
			{
				this._tbl_ProcedureParameters1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter2", Storage="_tbl_ProcedureParameters2", ThisKey="NotificationMessageID", OtherKey="WarningMaxMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters2
		{
			get
			{
				return this._tbl_ProcedureParameters2;
			}
			set
			{
				this._tbl_ProcedureParameters2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter3", Storage="_tbl_ProcedureParameters3", ThisKey="NotificationMessageID", OtherKey="WarningMinMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters3
		{
			get
			{
				return this._tbl_ProcedureParameters3;
			}
			set
			{
				this._tbl_ProcedureParameters3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter4", Storage="_tbl_ProcedureParameters4", ThisKey="NotificationMessageID", OtherKey="PossibleMaxMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters4
		{
			get
			{
				return this._tbl_ProcedureParameters4;
			}
			set
			{
				this._tbl_ProcedureParameters4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessage_tbl_ProcedureParameter5", Storage="_tbl_ProcedureParameters5", ThisKey="NotificationMessageID", OtherKey="PossibleMinMessage")]
		public EntitySet<tbl_ProcedureParameter> tbl_ProcedureParameters5
		{
			get
			{
				return this._tbl_ProcedureParameters5;
			}
			set
			{
				this._tbl_ProcedureParameters5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Culture_tbl_NotificationMessage", Storage="_tbl_Culture", ThisKey="CultureID", OtherKey="CultureID", IsForeignKey=true)]
		public tbl_Culture tbl_Culture
		{
			get
			{
				return this._tbl_Culture.Entity;
			}
			set
			{
				tbl_Culture previousValue = this._tbl_Culture.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Culture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Culture.Entity = null;
						previousValue.tbl_NotificationMessages.Remove(this);
					}
					this._tbl_Culture.Entity = value;
					if ((value != null))
					{
						value.tbl_NotificationMessages.Add(this);
						this._CultureID = value.CultureID;
					}
					else
					{
						this._CultureID = default(int);
					}
					this.SendPropertyChanged("tbl_Culture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessageType_tbl_NotificationMessage", Storage="_tbl_NotificationMessageType", ThisKey="Type", OtherKey="NotificationMessageTypeID", IsForeignKey=true)]
		public tbl_NotificationMessageType tbl_NotificationMessageType
		{
			get
			{
				return this._tbl_NotificationMessageType.Entity;
			}
			set
			{
				tbl_NotificationMessageType previousValue = this._tbl_NotificationMessageType.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NotificationMessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NotificationMessageType.Entity = null;
						previousValue.tbl_NotificationMessages.Remove(this);
					}
					this._tbl_NotificationMessageType.Entity = value;
					if ((value != null))
					{
						value.tbl_NotificationMessages.Add(this);
						this._Type = value.NotificationMessageTypeID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("tbl_NotificationMessageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage = this;
		}
		
		private void detach_tbl_ProcedureParameters(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage = null;
		}
		
		private void attach_tbl_ProcedureParameters1(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage1 = this;
		}
		
		private void detach_tbl_ProcedureParameters1(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage1 = null;
		}
		
		private void attach_tbl_ProcedureParameters2(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage2 = this;
		}
		
		private void detach_tbl_ProcedureParameters2(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage2 = null;
		}
		
		private void attach_tbl_ProcedureParameters3(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage3 = this;
		}
		
		private void detach_tbl_ProcedureParameters3(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage3 = null;
		}
		
		private void attach_tbl_ProcedureParameters4(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage4 = this;
		}
		
		private void detach_tbl_ProcedureParameters4(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage4 = null;
		}
		
		private void attach_tbl_ProcedureParameters5(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage5 = this;
		}
		
		private void detach_tbl_ProcedureParameters5(tbl_ProcedureParameter entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessage5 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_NotificationMessageType")]
	public partial class tbl_NotificationMessageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationMessageTypeID;
		
		private string _Name;
		
		private string _Comment;
		
		private EntitySet<tbl_NotificationMessage> _tbl_NotificationMessages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationMessageTypeIDChanging(int value);
    partial void OnNotificationMessageTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_NotificationMessageType()
		{
			this._tbl_NotificationMessages = new EntitySet<tbl_NotificationMessage>(new Action<tbl_NotificationMessage>(this.attach_tbl_NotificationMessages), new Action<tbl_NotificationMessage>(this.detach_tbl_NotificationMessages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationMessageTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationMessageTypeID
		{
			get
			{
				return this._NotificationMessageTypeID;
			}
			set
			{
				if ((this._NotificationMessageTypeID != value))
				{
					this.OnNotificationMessageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationMessageTypeID = value;
					this.SendPropertyChanged("NotificationMessageTypeID");
					this.OnNotificationMessageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NotificationMessageType_tbl_NotificationMessage", Storage="_tbl_NotificationMessages", ThisKey="NotificationMessageTypeID", OtherKey="Type")]
		public EntitySet<tbl_NotificationMessage> tbl_NotificationMessages
		{
			get
			{
				return this._tbl_NotificationMessages;
			}
			set
			{
				this._tbl_NotificationMessages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_NotificationMessages(tbl_NotificationMessage entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessageType = this;
		}
		
		private void detach_tbl_NotificationMessages(tbl_NotificationMessage entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NotificationMessageType = null;
		}
	}
}
#pragma warning restore 1591
