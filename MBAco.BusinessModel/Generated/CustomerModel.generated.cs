/*------------------------------------------------------------------------
<generated>
     This code was generated by MBAco Template
     Author: Matin Maleki.
     Generated at 04/03/2013 06:45:05 ?.?.

</generated>
------------------------------------------------------------------------*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Linq.Mapping;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace MBAco.BusinessModel
{
	/// <summary>
	/// This object represents the properties and methods of tables: dbo.tbl_Customer 
	/// </summary>
	[Serializable()]
	[DebuggerDisplay("CustomerModel->CustomerID: {CustomerID}")]
	public partial class CustomerModel: ModelItemBase
	{
		#region Public Properties        
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private int m_CustomerID = int.MinValue;
		/// <summary>
		/// CustomerID : Int32
		/// </summary>   
        [DataMember(Order = 0)]
		[Key]
        [LocalizedDisplayName("CustomerID")]
        [DatabaseAttribute("CustomerID", false)]
        [Bindable(false)]      
        [Browsable(false)]        
		[DataObjectField(true, true, false)] 
		[Required(ErrorMessage="Error: CustomerID is required!")]                
		public int CustomerID
		{
			[DebuggerStepThrough()]
			get { return this.m_CustomerID; }
            set
			{                
				if (!this.m_CustomerID.Equals(value)) 
				{
					this.m_CustomerID = value;
					NotifyPropertyChanged("CustomerID");
				}
			}
		}
		 
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private string m_Name = String.Empty;
		/// <summary>
		/// Name : String
		/// </summary>   
        [DataMember(Order = 1)]
        [LocalizedDisplayName("نام")]
        [DatabaseAttribute("Name", true)]
        [Bindable(true)]      
        [Browsable(true)]        
		[DataObjectField(false, false, false, 150)] 
		[Required(ErrorMessage="Error: Name is required!")]                
		public string Name
		{
			[DebuggerStepThrough()]
			get { return this.m_Name; }
            set
			{                
				if (!this.m_Name.Equals(value) && value != null) 
				{
					this.m_Name = value;
					NotifyPropertyChanged("Name");
				}
			}
		}
		 
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private string m_State = String.Empty;
		/// <summary>
		/// State : StringFixedLength
		/// </summary>   
        [DataMember(Order = 2)]
        [LocalizedDisplayName("استان")]
        [DatabaseAttribute("State", true)]
        [Bindable(true)]      
        [Browsable(true)]        
		[DataObjectField(false, false, false)] 
		[Required(ErrorMessage="Error: State is required!")]                
		public string State
		{
			[DebuggerStepThrough()]
			get { return this.m_State; }
            set
			{                
				if (!this.m_State.Equals(value) && value != null) 
				{
					this.m_State = value;
					NotifyPropertyChanged("State");
				}
			}
		}
		 
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private string m_City = String.Empty;
		/// <summary>
		/// City : StringFixedLength
		/// </summary>   
        [DataMember(Order = 3)]
        [LocalizedDisplayName("شهر")]
        [DatabaseAttribute("City", true)]
        [Bindable(true)]      
        [Browsable(true)]        
		[DataObjectField(false, false, false)] 
		[Required(ErrorMessage="Error: City is required!")]                
		public string City
		{
			[DebuggerStepThrough()]
			get { return this.m_City; }
            set
			{                
				if (!this.m_City.Equals(value) && value != null) 
				{
					this.m_City = value;
					NotifyPropertyChanged("City");
				}
			}
		}
		 
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private string m_Address = String.Empty;
		/// <summary>
		/// Address : StringFixedLength
		/// </summary>   
        [DataMember(Order = 4)]
        [LocalizedDisplayName("آدرس")]
        [DatabaseAttribute("Address", true)]
        [Bindable(true)]      
        [Browsable(true)]        
		[DataObjectField(false, false, false)] 
		[Required(ErrorMessage="Error: Address is required!")]                
		public string Address
		{
			[DebuggerStepThrough()]
			get { return this.m_Address; }
            set
			{                
				if (!this.m_Address.Equals(value) && value != null) 
				{
					this.m_Address = value;
					NotifyPropertyChanged("Address");
				}
			}
		}
		 
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private string m_Comment = String.Empty;
		/// <summary>
		/// Comment : String
		/// </summary>   
        [DataMember(Order = 5)]
        [LocalizedDisplayName("توضیحات")]
        [DatabaseAttribute("Comment", true)]
        [Bindable(true)]      
        [Browsable(true)]        
		[DataObjectField(false, false, true, 500)]                 
		public string Comment
		{
			[DebuggerStepThrough()]
			get { return this.m_Comment; }
            set
			{                
				if (!this.m_Comment.Equals(value) && value != null) 
				{
					this.m_Comment = value;
					NotifyPropertyChanged("Comment");
				}
			}
		}
		 
                    
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private List<DailyAnalyseReportModel> m_dailyAnalyseReports = null;
		/// <summary>
		/// A collection of DailyAnalyseReportModel children objects
		/// </summary>
		public List<DailyAnalyseReportModel> DailyAnalyseReports
		{
			get 
			{
				if (m_dailyAnalyseReports == null) {
					//m_dailyAnalyseReports = MBAco..DailyAnalyseReport.GetDailyAnalyseReportsByCustomer(this);
				}
				return m_dailyAnalyseReports;
			}
		}	
                    
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private List<CustomerContactModel> m_customerContacts = null;
		/// <summary>
		/// A collection of CustomerContactModel children objects
		/// </summary>
		public List<CustomerContactModel> CustomerContacts
		{
			get 
			{
				if (m_customerContacts == null) {
					//m_customerContacts = MBAco..CustomerContact.GetCustomerContactsByCustomer(this);
				}
				return m_customerContacts;
			}
		}	
                    
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		private List<ProcedureParameterModel> m_procedureParameters = null;
		/// <summary>
		/// A collection of ProcedureParameterModel children objects
		/// </summary>
		public List<ProcedureParameterModel> ProcedureParameters
		{
			get 
			{
				if (m_procedureParameters == null) {

                    return m_procedureParameters; //= value //.GetProcedureParametersByCustomer(this);
				}
				return m_procedureParameters;
			}
            set
            {
                m_procedureParameters = value;
            }
		}	
		#endregion // end of region Public Properties
		
		#region Non-Public Properties
		#endregion // end of region Non-Public Properties
		
		#region Constructors
		/// <summary>
		/// The default protected constructor
		/// </summary>
		public CustomerModel() { }
		#endregion // end of region Constructors
	}
}
