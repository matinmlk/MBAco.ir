/*------------------------------------------------------------------------
<generated>
     This code was generated by MBAco Template
     Author: Matin Maleki.
     Generated at 04/03/2013 02:30:04 ?.?.

</generated>
------------------------------------------------------------------------*/

using MBAco.BusinessModel;//.DailyAnalyseReport;
using MBAco.DAL;//.DailyAnalyseReport;
using System.Collections.Generic;
using System;
using System.Linq;

namespace MBAco.BLL
{
	/// <summary>
	/// This object represents the properties and methods of tables:dbo.tbl_DailyAnalyseReport and 
	/// </summary>
	public partial class DailyAnalyseReportBiz : IBusinessBase< DailyAnalyseReportModel >
	{
		#region Constructors
        public DailyAnalyseReportBiz()
        {
        }                
		#endregion // end of Constructors
        
        #region Public Methods 
        public virtual void Dispose()
        {
        }        
        
        public static DailyAnalyseReportModel FindByDailyAnalyseReportId(long Id)
        {
            return Get(Id);
        }
        
        internal static tbl_DailyAnalyseReport Totbl_DailyAnalyseReport(DailyAnalyseReportModel param)
        {
            tbl_DailyAnalyseReport m_tbl_DailyAnalyseReport = new tbl_DailyAnalyseReport();          
            if (param == null)
                throw new System.ArgumentNullException("param");         
            try
            {                
                m_tbl_DailyAnalyseReport.DailyAnalyseReportID = param.DailyAnalyseReportID;
				m_tbl_DailyAnalyseReport.Date = param.Date;
				m_tbl_DailyAnalyseReport.Value = param.Value;
				m_tbl_DailyAnalyseReport.IsApproved = param.IsApproved;
				m_tbl_DailyAnalyseReport.Comment = param.Comment;
				m_tbl_DailyAnalyseReport.CustomerID = param.CustomerID;
				m_tbl_DailyAnalyseReport.ProcedureParameterID = param.ProcedureParameterID;
            }
            catch(Exception ex)
            {
               throw new Exception("Business Object Convertion Error, " + ex.Message); 
            }            
            return m_tbl_DailyAnalyseReport;
        }        
        internal static DailyAnalyseReportModel Fromtbl_DailyAnalyseReport(tbl_DailyAnalyseReport m_tbl_DailyAnalyseReport)
        {
            DailyAnalyseReportModel m_DailyAnalyseReportModel = new DailyAnalyseReportModel();
            if (m_tbl_DailyAnalyseReport == null)
                throw new System.ArgumentNullException("m_tbl_DailyAnalyseReport");                
            try
            {                
                m_DailyAnalyseReportModel.DailyAnalyseReportID = m_tbl_DailyAnalyseReport.DailyAnalyseReportID;
				m_DailyAnalyseReportModel.Date = m_tbl_DailyAnalyseReport.Date;
				m_DailyAnalyseReportModel.Value = m_tbl_DailyAnalyseReport.Value;
				m_DailyAnalyseReportModel.IsApproved = m_tbl_DailyAnalyseReport.IsApproved;
				m_DailyAnalyseReportModel.Comment = m_tbl_DailyAnalyseReport.Comment;  
				m_DailyAnalyseReportModel.Customer = CustomerBiz.Get(m_tbl_DailyAnalyseReport.CustomerID);
				m_DailyAnalyseReportModel.ProcedureParameter = ProcedureParameterBiz.Get(m_tbl_DailyAnalyseReport.ProcedureParameterID);  
            }
            catch(Exception ex)
            {
               throw new Exception("Business Object Convertion Error, " + ex.Message); 
            }            
            return m_DailyAnalyseReportModel;
        }            
		#endregion // end of Public Methods
        
        #region Private Methods        
		#endregion // end of Private Methods
        
        #region CRUD Operations          
        public static DailyAnalyseReportModel New()
        {
            DailyAnalyseReportModel m_DailyAnalyseReportModel = new DailyAnalyseReportModel();            
            return m_DailyAnalyseReportModel;
        }  
        
        public static DailyAnalyseReportModel Get(long id)
        {
            DailyAnalyseReportModel item = DailyAnalyseReportBiz.Fromtbl_DailyAnalyseReport(DailyAnalyseReport.GetEntity(id));
            if (item == null)
                return null;
            item.MarkOld();
            return item;
        }        
        
        public static DailyAnalyseReportModel Save(DailyAnalyseReportModel param)
        {
            tbl_DailyAnalyseReport access = DailyAnalyseReportBiz.Totbl_DailyAnalyseReport(param);
            if (param.DailyAnalyseReportID == -1 || param.DailyAnalyseReportID == int.MinValue)
            {
                param = DailyAnalyseReportBiz.Fromtbl_DailyAnalyseReport(DailyAnalyseReport.Insert(access));
            }
            else if (param.DailyAnalyseReportID != -1)
            {
                DailyAnalyseReport.Update(access);
                //ItemLocalized.Save(access.TblItemLocalizeds[0]);
            }
            else if (param.IsDeleted)
            {
                if (param.DailyAnalyseReportID != -1)
                {
                    Delete(param.DailyAnalyseReportID);
                }
                param.Dispose();
                return null;
            }
            param.MarkOld();
            return param;
        }        
        
        private static DailyAnalyseReportModel ObjectSave(DailyAnalyseReportModel param)
        {
            return null;
        }
        
        public static void Delete(long id)
        {
           DailyAnalyseReport.Delete(DailyAnalyseReport.GetEntity(id));
        }                
		#endregion // end of CRUD Operations   
        
        #region IBusinessBase Members
        public DailyAnalyseReportModel GetItem(long id)
        {
            return Get(id);
        }

        public DailyAnalyseReportModel SaveItem(DailyAnalyseReportModel dataItem)
        {
            return Save(dataItem);
        }

        public void DeleteItem(long id)
        {
            Delete(id);
        }

        public void DeleteItem(DailyAnalyseReportModel dataItem)
        {
            Delete(dataItem.DailyAnalyseReportID);
            dataItem.Dispose();
        }        
		#endregion // end of IBusinessBase Members
	}
}
