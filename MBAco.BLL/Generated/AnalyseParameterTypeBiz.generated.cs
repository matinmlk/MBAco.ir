/*------------------------------------------------------------------------
<generated>
     This code was generated by MBAco Template
     Author: Matin Maleki.
     Generated at 04/03/2013 02:30:03 ?.?.

</generated>
------------------------------------------------------------------------*/

using MBAco.BusinessModel;//.AnalyseParameterType;
using MBAco.DAL;//.AnalyseParameterType;
using System.Collections.Generic;
using System;
using System.Linq;

namespace MBAco.BLL
{
	/// <summary>
	/// This object represents the properties and methods of tables:dbo.tbl_AnalyseParameterType and 
	/// </summary>
	public partial class AnalyseParameterTypeBiz : IBusinessBase< AnalyseParameterTypeModel >
	{
		#region Constructors
        public AnalyseParameterTypeBiz()
        {
        }                
		#endregion // end of Constructors
        
        #region Public Methods 
        public virtual void Dispose()
        {
        }        
        
        public static AnalyseParameterTypeModel FindByAnalyseParameterTypeId(long Id)
        {
            return Get(Id);
        }
        
        internal static tbl_AnalyseParameterType Totbl_AnalyseParameterType(AnalyseParameterTypeModel param)
        {
            tbl_AnalyseParameterType m_tbl_AnalyseParameterType = new tbl_AnalyseParameterType();          
            if (param == null)
                throw new System.ArgumentNullException("param");         
            try
            {                
                m_tbl_AnalyseParameterType.AnalyseParameterTypeID = param.AnalyseParameterTypeID;
				m_tbl_AnalyseParameterType.Name = param.Name;
				m_tbl_AnalyseParameterType.Comment = param.Comment;

            }
            catch(Exception ex)
            {
               throw new Exception("Business Object Convertion Error, " + ex.Message); 
            }            
            return m_tbl_AnalyseParameterType;
        }        
        internal static AnalyseParameterTypeModel Fromtbl_AnalyseParameterType(tbl_AnalyseParameterType m_tbl_AnalyseParameterType)
        {
            AnalyseParameterTypeModel m_AnalyseParameterTypeModel = new AnalyseParameterTypeModel();
            if (m_tbl_AnalyseParameterType == null)
                throw new System.ArgumentNullException("m_tbl_AnalyseParameterType");                
            try
            {                
                m_AnalyseParameterTypeModel.AnalyseParameterTypeID = m_tbl_AnalyseParameterType.AnalyseParameterTypeID;
				m_AnalyseParameterTypeModel.Name = m_tbl_AnalyseParameterType.Name;
				m_AnalyseParameterTypeModel.Comment = m_tbl_AnalyseParameterType.Comment;  
  
            }
            catch(Exception ex)
            {
               throw new Exception("Business Object Convertion Error, " + ex.Message); 
            }            
            return m_AnalyseParameterTypeModel;
        }            
		#endregion // end of Public Methods
        
        #region Private Methods        
		#endregion // end of Private Methods
        
        #region CRUD Operations          
        public static AnalyseParameterTypeModel New()
        {
            AnalyseParameterTypeModel m_AnalyseParameterTypeModel = new AnalyseParameterTypeModel();            
            return m_AnalyseParameterTypeModel;
        }  
        
        public static AnalyseParameterTypeModel Get(long id)
        {
            AnalyseParameterTypeModel item = AnalyseParameterTypeBiz.Fromtbl_AnalyseParameterType(AnalyseParameterType.GetEntity(id));
            if (item == null)
                return null;
            item.MarkOld();
            return item;
        }        
        
        public static AnalyseParameterTypeModel Save(AnalyseParameterTypeModel param)
        {
            tbl_AnalyseParameterType access = AnalyseParameterTypeBiz.Totbl_AnalyseParameterType(param);
            if (param.AnalyseParameterTypeID == -1 || param.AnalyseParameterTypeID == int.MinValue)
            {
                param = AnalyseParameterTypeBiz.Fromtbl_AnalyseParameterType(AnalyseParameterType.Insert(access));
            }
            else if (param.AnalyseParameterTypeID != -1)
            {
                AnalyseParameterType.Update(access);
                //ItemLocalized.Save(access.TblItemLocalizeds[0]);
            }
            else if (param.IsDeleted)
            {
                if (param.AnalyseParameterTypeID != -1)
                {
                    Delete(param.AnalyseParameterTypeID);
                }
                param.Dispose();
                return null;
            }
            param.MarkOld();
            return param;
        }        
        
        private static AnalyseParameterTypeModel ObjectSave(AnalyseParameterTypeModel param)
        {
            return null;
        }
        
        public static void Delete(long id)
        {
           AnalyseParameterType.Delete(AnalyseParameterType.GetEntity(id));
        }                
		#endregion // end of CRUD Operations   
        
        #region IBusinessBase Members
        public AnalyseParameterTypeModel GetItem(long id)
        {
            return Get(id);
        }

        public AnalyseParameterTypeModel SaveItem(AnalyseParameterTypeModel dataItem)
        {
            return Save(dataItem);
        }

        public void DeleteItem(long id)
        {
            Delete(id);
        }

        public void DeleteItem(AnalyseParameterTypeModel dataItem)
        {
            Delete(dataItem.AnalyseParameterTypeID);
            dataItem.Dispose();
        }        
		#endregion // end of IBusinessBase Members
	}
}
