/*------------------------------------------------------------------------
<generated>
     This code was generated by MBAco Template
     Author: Matin Maleki.
     Generated at 04/03/2013 02:30:05 ?.?.

</generated>
------------------------------------------------------------------------*/

using MBAco.BusinessModel;//.ProcedureParameter;
using System.Collections.Generic;
using System;
using System.Linq;

namespace MBAco.BLL
{
    [System.ComponentModel.DataObject]
	public static partial class ProcedureParameterServices
	{      
        #region CRUD Operations  
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static ProcedureParameterModel Get(long objectID)
        {
            return ProcedureParameterBiz.Get(objectID);
        }        
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public static List<ProcedureParameterModel> GetList()
        {
            return GetList(-1, -1, string.Empty);
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static List<ProcedureParameterModel> GetList(string searchString, bool searchPartial)
        {
            return GetList(-1, -1, string.Empty);
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static List<ProcedureParameterModel> GetList(int maximumRows,
          int startRowIndex)
        {
            return GetList(maximumRows, startRowIndex, string.Empty);
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static List<ProcedureParameterModel> GetList(string searchString, bool searchPartial, int maximumRows,
            int startRowIndex)
        {
            return GetList(maximumRows, startRowIndex, string.Empty);
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static List<ProcedureParameterModel> GetList(string SortExpression)
        {
            return GetList(-1, -1, SortExpression);
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public static List<ProcedureParameterModel> GetList(int maximumRows,
          int startRowIndex, string sortExpression)
        {
            ProcedureParameterListBiz list = new ProcedureParameterListBiz();
            return list.GetAll(sortExpression, maximumRows, startRowIndex);
        }

        public static long GetTotalCount()
        {
            ProcedureParameterListBiz list = new ProcedureParameterListBiz();
            return list.Count;
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public static ProcedureParameterModel InsertObject(int customerID, int analayseParameterID, double? dangerMaxLimit, double? dangerMinLimit, double? warningMaxLimit, double? warningMinLimit, double? possibleMaxLimit, double? possibleMinLimit, int? dangerMaxMessageId, int? dangerMinMessageId, int? warningMaxMessageId, int? warningMinMessageId, int? possibleMaxMessageId, int? possibleMinMessageId, string comment)
        {
            ProcedureParameterModel obj = new ProcedureParameterModel();
			obj.CustomerID = customerID;
			obj.AnalayseParameterID = analayseParameterID;
			obj.DangerMaxLimit = dangerMaxLimit;
			obj.DangerMinLimit = dangerMinLimit;
			obj.WarningMaxLimit = warningMaxLimit;
			obj.WarningMinLimit = warningMinLimit;
			obj.PossibleMaxLimit = possibleMaxLimit;
			obj.PossibleMinLimit = possibleMinLimit;
			obj.DangerMaxMessageId = dangerMaxMessageId;
			obj.DangerMinMessageId = dangerMinMessageId;
			obj.WarningMaxMessageId = warningMaxMessageId;
			obj.WarningMinMessageId = warningMinMessageId;
			obj.PossibleMaxMessageId = possibleMaxMessageId;
			obj.PossibleMinMessageId = possibleMinMessageId;
			obj.Comment = comment;
            return ProcedureParameterBiz.Save(obj);            
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public static ProcedureParameterModel UpdateObject(int procedureParameterID, int customerID, int analayseParameterID, double? dangerMaxLimit, double? dangerMinLimit, double? warningMaxLimit, double? warningMinLimit, double? possibleMaxLimit, double? possibleMinLimit, int? dangerMaxMessageId, int? dangerMinMessageId, int? warningMaxMessageId, int? warningMinMessageId, int? possibleMaxMessageId, int? possibleMinMessageId, string comment)
        {
            ProcedureParameterModel obj = ProcedureParameterBiz.Get(procedureParameterID);            
			obj.CustomerID = customerID;
			obj.AnalayseParameterID = analayseParameterID;
			obj.DangerMaxLimit = dangerMaxLimit;
			obj.DangerMinLimit = dangerMinLimit;
			obj.WarningMaxLimit = warningMaxLimit;
			obj.WarningMinLimit = warningMinLimit;
			obj.PossibleMaxLimit = possibleMaxLimit;
			obj.PossibleMinLimit = possibleMinLimit;
			obj.DangerMaxMessageId = dangerMaxMessageId;
			obj.DangerMinMessageId = dangerMinMessageId;
			obj.WarningMaxMessageId = warningMaxMessageId;
			obj.WarningMinMessageId = warningMinMessageId;
			obj.PossibleMaxMessageId = possibleMaxMessageId;
			obj.PossibleMinMessageId = possibleMinMessageId;
			obj.Comment = comment;
            return ProcedureParameterBiz.Save(obj);  
        }

        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public static void DeleteObject(long objectID)
        {
            ProcedureParameterBiz.Delete(objectID);
        }              
		#endregion // end of CRUD Operations   
	}
}
